  type Query {
    users: [User!]!
    user (id: String!): User
    reviews: [Review!]!
    review(id: String!): Review
    restaurants: [Restaurant!]!
  }

  type Mutation {
    createUser (input: CreateUserInput!): User!
    updateUser (input: UpdateUserInput!): User!
    deleteUser (id: String!): User!

    createRestaurant (input: CreateRestaurantInput!): Restaurant!
    createReview (input: CreateReviewInput): Review!
  }

  type User {
    id: ID!
    email: String!
    username: String!
    createdAt: String!
    firstName: String
    lastName: String
    profilePictureURL: String!
    reviews: [Review!]
  }

  type Review {
    id: ID!
    createdAt: String!
    rating: Int!
    description: String!
    author: User!
    restaurant: Restaurant!
  }

  type Restaurant {
    id: String!
    name: String!
    picture: String!
    location: String!
    reviews: [Review!]
  }

  input CreateUserInput {
    username: String!
    email: String!
    firstName: String
    lastName: String
    profilePictureURL: String!
  }

  input CreateReviewInput {
    rating: Int!
    description: String!
    author: UserInput!
    restaurant: RestaurantInput!
  },

  input UserInput {
    userName: String!
    firstName: String
    lastName: String
    profilePictureURL: String!
  }

  input RestaurantInput {
      name: String!
  }

  input UpdateUserInput {
    id: String
    username: String
    firstName: String
    lastName: String
    reviews: [CreateReviewInput!]
    profilePictureURL: String!
  }

  input CreateRestaurantInput {
    name: String!
    picture: String!
    location: String!
  }